#!/bin/sh 
#
# Copyright (C) 2017 openwrt-ssr
# Copyright (C) 2017 yushi studio <ywb94@qq.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#


NAME=shadowsocks

uci_get_by_name() {
	local ret=$(uci get $NAME.$1.$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

server_process_count=$1
redir_tcp_process=$2
redir_udp_process=$3
tunnel_process=$4
kcp_process=$5
local_process=$6
dns_process=$7
if  [ -z "$dns_process" ] ;then
dns_process=0
fi

i=0

GLOBAL_SERVER=$(uci_get_by_type global global_server)
local server=$(uci_get_by_name $GLOBAL_SERVER server)
local kcp_port=$(uci_get_by_name $GLOBAL_SERVER kcp_port)
local server_port=$(uci_get_by_name $GLOBAL_SERVER server_port)
local password=$(uci_get_by_name $GLOBAL_SERVER kcp_password)
local kcp_param=$(uci_get_by_name $GLOBAL_SERVER kcp_param)
[ "$password" != "" ] && password="--key "${password}

local sock5_port=$(uci_get_by_type socks5_proxy local_port 1080)

if echo $server|grep -E "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$">/dev/null; then         
	server=${server}
	else
  server=`cat /etc/ssr_ip`
fi

while [ "1" = "1" ]  #��ѭ��
do 
   sleep 30
#redir tcp
			if [ $redir_tcp_process -gt 0 ] ;then
			icount=`ps -w | grep ss-retcp |grep -v grep| wc -l`
			if [ $icount = 0 ] ;then
			logger -t "$NAME" "ssr redir tcp error.restart!"
			 /etc/init.d/shadowsocks restart 
			exit 0
			fi
			fi
#redir udp
			if [ $redir_udp_process -gt 0 ] ;then
			icount=`ps -w  | grep ss-reudp|grep -v grep| wc -l`
			if [ $icount = 0 ] ;then
			logger -t "$NAME" "ssr redir udp error.restart!"
			 /etc/init.d/shadowsocks restart 
			exit 0
			fi
			fi
#tunnel
			if [ $tunnel_process -gt 0 ] ;then
			icount=`ps -w  | grep ss-tunnel |grep -v grep| wc -l`
			if [ $icount = 0 ] ;then
			logger -t "$NAME" "ssr tunnel error.restart!"
			 /etc/init.d/shadowsocks restart 
			exit 0
			fi
			fi
#server
      if [ $server_process_count -gt 0 ] ;then
      icount=`ps -w  | grep ss-server |grep -v grep| wc -l`
      if [ $icount -lt $server_process_count ]  #������̹ҵ��������
      then
      logger -t "$NAME" "ssr server error.restart!"
      killall -q -9 ss-server 
      for i in `seq $server_process_count`
      do
       /usr/bin/ss-server -c /var/etc/shadowsocks_$i.json -u -f /var/run/ss-server$i.pid   
      done  
      fi   
      fi
#kcptun
      if [ $kcp_process -gt 0 ] ;then
      icount=`ps -w  | grep ss-kcptun |grep -v grep| wc -l`
      if [ $icount -lt $kcp_process ]  #������̹ҵ��������
      then
      logger -t "$NAME" "ssr kcptun error.restart!"
      killall -q -9 ss-kcptun

			( /usr/bin/ss-kcptun -r $server:$kcp_port -l :$server_port  $password $kcp_param &)
      fi   
      fi
#local
      if [ $local_process -gt 0 ] ;then
      icount=`ps -w  | grep ss-local |grep -v grep| wc -l`
      if [ $icount -lt $local_process ]  #������̹ҵ��������
      then
      logger -t "$NAME" "ssr local error.restart!"
      killall -q -9 ss-local

			( /usr/bin/ss-local -c /var/etc/shadowsocks_s.json -u -l $sock5_port -f /var/run/ss-local.pid &)
      fi   
      fi
#dns
      if [ $dns_process -gt 0 ] ;then
      icount=`ps -w  | grep ss-dns |grep -v grep| wc -l`
      if [ $icount -lt $dns_process ]  #������̹ҵ��������
      then
      logger -t "$NAME" "ssr dns tunnel error.restart!"
      killall -q -9 ss-tunnel

			( /usr/bin/ss-tunnel -c /var/etc/shadowsocks.json -b 0.0.0.0 -u -l 5353 -L $(uci_get_by_type global tunnel_forward 8.8.4.4:53) -f /var/run/ss-dns.pid &)
      fi   
      fi      
done